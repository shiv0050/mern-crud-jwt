[{"/Users/shivanshgupta/mern-crud-auth/frontend/src/index.js":"1","/Users/shivanshgupta/mern-crud-auth/frontend/src/App.js":"2","/Users/shivanshgupta/mern-crud-auth/frontend/src/components/login.js":"3","/Users/shivanshgupta/mern-crud-auth/frontend/src/components/restaurants.js":"4","/Users/shivanshgupta/mern-crud-auth/frontend/src/components/add-review.js":"5","/Users/shivanshgupta/mern-crud-auth/frontend/src/components/restaurants-list.js":"6","/Users/shivanshgupta/mern-crud-auth/frontend/src/services/restaurant.js":"7","/Users/shivanshgupta/mern-crud-auth/frontend/src/http-common.js":"8"},{"size":238,"mtime":1657565568447,"results":"9","hashOfConfig":"10"},{"size":1989,"mtime":1660063227311,"results":"11","hashOfConfig":"10"},{"size":1409,"mtime":1657734355407,"results":"12","hashOfConfig":"10"},{"size":3921,"mtime":1657735525163,"results":"13","hashOfConfig":"10"},{"size":2331,"mtime":1657737904436,"results":"14","hashOfConfig":"10"},{"size":4881,"mtime":1657714333448,"results":"15","hashOfConfig":"10"},{"size":677,"mtime":1657735861377,"results":"16","hashOfConfig":"10"},{"size":176,"mtime":1657712930002,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1laa8e",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shivanshgupta/mern-crud-auth/frontend/src/index.js",[],[],"/Users/shivanshgupta/mern-crud-auth/frontend/src/App.js",["45"],[],"import React,{useState} from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport AddReview from \"./components/add-review\";\nimport Restaurant from \"./components/restaurants\";\nimport RestaurantsList from \"./components/restaurants-list\";\nimport Login from \"./components/login\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  async function login(user = null) {\n    setUser(user);\n  }\n\n  async function logout() {\n    setUser(null)\n  }\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <a href=\"/restaurants\" className=\"navbar-brand\">\n          Restaurant Reviews\n        </a>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/restaurants\"} className=\"nav-link\">\n              Restaurants\n            </Link>\n          </li>\n          <li className=\"nav-item\" >\n            { user ? (\n              <a onClick={logout} className=\"nav-link\" style={{cursor:'pointer'}}>\n                Logout {user.name}\n              </a>\n            ) : (            \n            <Link to={\"/login\"} className=\"nav-link\">\n              Login\n            </Link>\n            )}\n\n          </li>\n        </div>\n      </nav>\n\n      <div className=\"container mt-3\">\n        <Switch>\n          <Route exact path={[\"/\", \"/restaurants\"]} component={RestaurantsList} />\n          <Route \n            path=\"/restaurants/:id/review\"\n            render={(props) => (\n              <AddReview {...props} user={user} />\n            )}\n          />\n          <Route \n            path=\"/restaurants/:id\"\n            render={(props) => (\n              <Restaurant {...props} user={user} />\n            )}\n          />\n          <Route \n            path=\"/login\"\n            render={(props) => (\n              <Login {...props} login={login} />\n            )}\n          />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","/Users/shivanshgupta/mern-crud-auth/frontend/src/components/login.js",[],[],"/Users/shivanshgupta/mern-crud-auth/frontend/src/components/restaurants.js",["46"],[],"import React, { useState } from \"react\";\nimport RestaurantDataService from \"../services/restaurant.js\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nconst Restaurant= props => {\n    const initialRestaurantState={\n        id: null,\n        name:\"\",\n        address:{},\n        cuisine:\"\",\n        reviews:[]\n    }\n    const [restaurant,setRestaurants] = useState(initialRestaurantState)\n    const getRestaurant =id=>{\n        RestaurantDataService.get(id)\n        .then(response => {\n            setRestaurants(response.data)\n            console.log(response.data)\n        })\n        .catch(e=>{\n            console.log(e)\n        })\n    }\n    useEffect(()=>{\n        getRestaurant(props.match.params.id);\n  }, [props.match.params.id])\n    const deleteReview =(reviewId, index)=>{\n        RestaurantDataService.deleteReview(reviewId,props.user.id)\n        .then(response =>{\n            setRestaurants((prevState) =>{\n                prevState.reviews.splice(index,1)\n                return({\n                    ...prevState\n                })\n            })\n        })\n        .catch(e=>{\n            console.log(e)\n        })    \n    }\n  return (\n    <div>\n        {restaurant?(\n            <div>\n                <h5>{restaurant.name}</h5>\n                <p>\n                    <strong>Cuisine:</strong>{restaurant.cuisine}<br/>\n                    <strong>Address:</strong>{restaurant.address.building}<br/>\n                </p>\n                <Link to={\"/restaurants/\"+ props.match.params.id+\"/review\"} className=\"btn btn-primary\">\n                    Add Review\n                </Link>\n                <h6>Reviews</h6>\n                <div className=\"row\">\n                    {restaurant.reviews.length>0?(\n                     restaurant.reviews.map((review,index)=>{\n                        return(\n                            <div className=\"col-lg-4 pb-1\" key={index}>\n                                <div className=\"card\">\n                                    <div className=\"card-body\">\n                                    <p className=\"card-text\">\n                                        {review.text}<br/>\n                                        <strong>User:</strong>{review.name}<br/>\n                                        <strong>Date:</strong>{review.date}<br/>\n                                    </p>\n                                    {props.user && props.user.id === review.user_id &&\n                                    <div className=\"row\">\n                                        <a onClick={() => deleteReview(review._id, index)} className=\"btn btn-primary col-lg-5 mx-1 mb-1\">\n                                            Delete\n                                        </a>\n                                        <Link to={{\n                                            pathname: \"/restaurants/\" + props.match.params.id + \"/review\",\n                                            state: {\n                                                currentReview: review\n                                            }\n                                        }} className=\"btn btn-primary col-lg-5 mx-1 mb-1\">\n                                            Edit\n                                        </Link>\n                                    </div>                   \n                                    }\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                     })\n                    ):(\n                        <div className=\"col-sm-4\">\n                            <p>No reviews yet.</p>\n                        </div>\n                    )}\n                </div>\n                </div>\n        ):(\n            <div>\n                <br/>\n                <p>No restaurant selected.</p>\n            </div>\n        )}\n    </div>\n  );\n}\n\nexport default Restaurant;\n","/Users/shivanshgupta/mern-crud-auth/frontend/src/components/add-review.js",[],[],"/Users/shivanshgupta/mern-crud-auth/frontend/src/components/restaurants-list.js",["47"],[],"import React, { useState, useEffect } from \"react\";\nimport RestaurantDataService from \"../services/restaurant.js\";\nimport { Link } from \"react-router-dom\";\n\nconst RestaurantsList = props => {\n  const [restaurants, setRestaurants] = useState([]);\n  const [searchName, setSearchName ] = useState(\"\");\n  const [searchZip, setSearchZip ] = useState(\"\");\n  const [searchCuisine, setSearchCuisine ] = useState(\"\");\n  const [cuisines, setCuisines] = useState([\"All Cuisines\"]);\n\n  useEffect(() => {\n    retrieveRestaurants();\n    retrieveCuisines();\n  }, []);\n\n  const onChangeSearchName = e => {\n    const searchName = e.target.value;\n    setSearchName(searchName);\n  };\n\n  const onChangeSearchZip = e => {\n    const searchZip = e.target.value;\n    setSearchZip(searchZip);\n  };\n\n  const onChangeSearchCuisine = e => {\n    const searchCuisine = e.target.value;\n    setSearchCuisine(searchCuisine);\n    \n  };\n\n  const retrieveRestaurants = () => {\n    RestaurantDataService.getAll()\n      .then(response => {\n        console.log(response.data);\n        setRestaurants(response.data.restaurants);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const retrieveCuisines = () => {\n    RestaurantDataService.getCuisines()\n      .then(response => {\n        console.log(response.data);\n        setCuisines([\"All Cuisines\"].concat(response.data));\n        \n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const refreshList = () => {\n    retrieveRestaurants();\n  };\n\n  const find = (query, by) => {\n    RestaurantDataService.find(query, by)\n      .then(response => {\n        console.log(response.data);\n        setRestaurants(response.data.restaurants);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const findByName = () => {\n    find(searchName, \"name\")\n  };\n\n  const findByZip = () => {\n    find(searchZip, \"zipcode\")\n  };\n\n  const findByCuisine = () => {\n    if (searchCuisine === \"All Cuisines\") {\n      refreshList();\n    } else {\n      find(searchCuisine, \"cuisine\")\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"row pb-1\">\n        <div className=\"input-group col-lg-4\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by name\"\n            value={searchName}\n            onChange={onChangeSearchName}\n          />\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              type=\"button\"\n              onClick={findByName}\n            >\n              Search\n            </button>\n          </div>\n        </div>\n        <div className=\"input-group col-lg-4\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by zip\"\n            value={searchZip}\n            onChange={onChangeSearchZip}\n          />\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              type=\"button\"\n              onClick={findByZip}\n            >\n              Search\n            </button>\n          </div>\n        </div>\n         <div className=\"input-group col-lg-4\">\n\n          <select onChange={onChangeSearchCuisine}>\n             {cuisines.map(cuisine => {\n               return (\n                 <option key={cuisine}> {cuisine.substr(0, 20)} </option>\n               )\n             })}\n          </select>\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              type=\"button\"\n              onClick={findByCuisine}\n            >\n              Search\n            </button>\n          </div>\n\n        </div>\n            </div>\n      <div className=\"row\">\n        {restaurants.map((restaurant) => {\n          const address = `${restaurant.address.building} ${restaurant.address.street}, ${restaurant.address.zipcode}`;\n          return (\n            <div key ={restaurant._id} className=\"col-lg-4 pb-1\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{restaurant.name}</h5>\n                  <p className=\"card-text\">\n                    <strong>Cuisine: </strong>{restaurant.cuisine}<br/>\n                    <strong>Address: </strong>{address}\n                  </p>\n                  <div className=\"row\">\n                  <Link to={\"/restaurants/\"+restaurant._id} className=\"btn btn-primary col-lg-5 mx-1 mb-1\">\n                    View Reviews\n                  </Link>\n                  <a target=\"_blank\" href={\"https://www.google.com/maps/place/\" + address} className=\"btn btn-primary col-lg-5 mx-1 mb-1\">View Map</a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n\n\n      </div>\n    </div>\n  );\n};\n\nexport default RestaurantsList;","/Users/shivanshgupta/mern-crud-auth/frontend/src/services/restaurant.js",[],[],"/Users/shivanshgupta/mern-crud-auth/frontend/src/http-common.js",[],[],{"ruleId":"48","severity":1,"message":"49","line":35,"column":15,"nodeType":"50","endLine":35,"endColumn":83},{"ruleId":"48","severity":1,"message":"49","line":69,"column":41,"nodeType":"50","endLine":69,"endColumn":139},{"ruleId":"51","severity":1,"message":"52","line":163,"column":19,"nodeType":"50","messageId":"53","endLine":163,"endColumn":139,"fix":"54"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"55","text":"56"},[4688,4688]," rel=\"noreferrer\""]